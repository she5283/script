1. 상속 : 재사용
2. 부모 참조변수가 자식을 가리킬 수 있다
3. 부모를 사용하면 자식도 처리할 수 있다
	List<탈것> list;
	writeObject(Object obj);
4. 부모의 참조변수로 자식의 맴버는 접근이 안된다
5. 상속으로 재사용....은 개념은 근사한데 잘 안돼
   부모가 사용법을 정해주자 -> override로 부모가 정해준 메소드를 자식이 구현하면
			   문제없이 실행된다
6. 부모는 메소드 이름을 정해준다(표준) -> 자식이 표준 명을 어떻게 알지?
7. 추상메소드로 자식에게 이름을 가르쳐주자
8. 추상메소드를 인터페이스에 담자

SOLID
	S : 단일책임원칙
	O : 개방폐쇄원칙
	L : Liskov 치환원칙 : 부모와 자식은 치환 가능해야 한다
			  자식은 부모의 메소드를 구현한다(extends 금지)
	I : 인터페이스 분리 원칙 : 인터페이스는 작게 잘라